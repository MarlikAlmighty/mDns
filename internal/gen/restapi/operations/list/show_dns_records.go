// Code generated by go-swagger; DO NOT EDIT.

package list

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ShowDNSRecordsHandlerFunc turns a function with the right signature into a show dns records handler
type ShowDNSRecordsHandlerFunc func(ShowDNSRecordsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ShowDNSRecordsHandlerFunc) Handle(params ShowDNSRecordsParams) middleware.Responder {
	return fn(params)
}

// ShowDNSRecordsHandler interface for that can handle valid show dns records params
type ShowDNSRecordsHandler interface {
	Handle(ShowDNSRecordsParams) middleware.Responder
}

// NewShowDNSRecords creates a new http.Handler for the show dns records operation
func NewShowDNSRecords(ctx *middleware.Context, handler ShowDNSRecordsHandler) *ShowDNSRecords {
	return &ShowDNSRecords{Context: ctx, Handler: handler}
}

/* ShowDNSRecords swagger:route GET /dns list showDnsRecords

Show all dns records

*/
type ShowDNSRecords struct {
	Context *middleware.Context
	Handler ShowDNSRecordsHandler
}

func (o *ShowDNSRecords) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewShowDNSRecordsParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
